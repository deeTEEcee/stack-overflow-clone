<!DOCTYPE html>
<html>
<head>
  <title><%= t('site.title') %></title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <%= favicon_link_tag 'favicon.ico' %>
</head>
<body>
<div id="wrapper">
  <nav id="topbar" class="navbar navbar-default navbar-static-top">
    <ul class="nav navbar-nav">
      <% if logged_in? %>
        <li><%= current_user.username %></li>
        <li><%= link_to t('logout'), logout_path %></li>
      <% else %>
        <li><%= link_to t('signup'), signup_path %></li>
        <li><%= link_to t('login'), login_path %></li>
      <% end %>
    </ul>
  </nav>

  <div class="container">
    <div id="header">
      <%= link_to root_path do %>
        <%= image_tag 'header.png', style: 'vertical-align: text-bottom;' %>
      <% end %>
        <span class="nav-item"><%= link_to t('header.questions'), questions_path %></span>
        <span class="nav-item"><%= link_to t('header.ask_question'), new_question_path %></span>
    </div>
    <% if flash[:login] %>
      <div class="text-center val-msg">
        <%= t('page.user.login.required_html', link: signup_path) %>
      </div>
    <% end %>
    <%= yield %>
  </div>
</div>
</body>
</html>

<%= javascript_tag do %>
  $(function(){
    window.currentUserId = "<%= current_user.id %>" // TODO: this should be saved as a session id somehow or something so that we wouldn't have to grab it everytime
    var dispatcher = new WebSocketRails('localhost:3000/websocket');
    channel = dispatcher.subscribe('answers');
    channel.bind('new', function(answer) {
      if(window.currentUserId != answer.user.id){
        var n = noty({
          text: 'a new answer for '+ answer.question_title + 'by '+ answer.user.name +' arrived!',
          type: 'information',
          animation: {
            open: 'animated flipInX', // Animate.css class names
            close: 'animated flipOutX', // Animate.css class names
            speed: 2000
          },
          callback: {
            afterShow: function() {
              setTimeout(function(){
              n.close();
              }, 5000);
            }
          }
        });
      }
    });
  });
<% end %>